plugins {
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'com.github.ben-manes.versions' version '0.39.0'
    id 'antlr'
    id 'net.minecraftforge.gradleutils' version '2.+'
}

apply plugin: 'maven-publish'
apply plugin: 'java-library'
apply plugin: 'eclipse'

group 'net.minecraftforge'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

version = 9

test {
    useJUnitPlatform()
}

compileJava {
    dependsOn generateGrammarSource
    targetCompatibility = sourceCompatibility = 1.8
}

jar.manifest = manifest {
    attributes(['Specification-Title': 'accesstransformers',
                'Specification-Vendor': 'forge',
                'Specification-Version': '1', // Currently version 1 of the accesstransformer specification
                'Implementation-Title': project.name,
                'Implementation-Version': "${project.version}+${System.getenv('BUILD_NUMBER')?:0}+${gradleutils.gitInfo.branch}.${gradleutils.gitInfo.abbreviatedId}",
                'Implementation-Vendor': 'forge',
                'Implementation-Timestamp': java.time.Instant.now().toString(),
                'Git-Commit': gradleutils.gitInfo.abbreviatedId,
                'Git-Branch': gradleutils.gitInfo.branch,
                'Build-Number': "${System.getenv('BUILD_NUMBER')?:0}" ],
            'net/minecraftforge/accesstransformer/service/')
    attributes(['Specification-Title': 'accesstransformers',
                'Specification-Vendor': 'Forge',
                'Specification-Version': '1', // Currently version 1 of the accesstransformer specification
                'Implementation-Title': project.name,
                'Implementation-Version': "${project.version}+${System.getenv('BUILD_NUMBER')?:0}+${gradleutils.gitInfo.branch}.${gradleutils.gitInfo.abbreviatedId}",
                'Implementation-Vendor': 'forge',
                'Implementation-Timestamp': java.time.Instant.now().toString(),
                'Git-Commit': gradleutils.gitInfo.abbreviatedId,
                'Git-Branch': gradleutils.gitInfo.branch,
                'Build-Number': "${System.getenv('BUILD_NUMBER')?:0}" ],
            'net/minecraftforge/accesstransformer/')
}

task sourcesJar(type: Jar) {
    dependsOn generateGrammarSource
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = 'forge'
        url = 'https://maven.minecraftforge.net/'
    }
}

dependencies {
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.7.+')
    testImplementation('com.google.code.gson:gson:2.8.6')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.7.+')

    implementation('org.antlr:antlr4-runtime:4.9.1')
    implementation('net.sf.jopt-simple:jopt-simple:5.0.4')
    implementation('org.ow2.asm:asm:9.1')
    implementation('org.ow2.asm:asm-commons:9.1')
    implementation('org.ow2.asm:asm-tree:9.1')
    implementation('org.apache.logging.log4j:log4j-api:2.11.+')
    implementation('org.apache.logging.log4j:log4j-core:2.11.+')

    antlr('org.antlr:antlr4:4.9.1')
}

shadowJar {
    classifier 'fatjar'
    exclude '**/Log4j2Plugins.dat'
    manifest {
        inheritFrom jar.manifest
        attributes('Main-Class': 'net.minecraftforge.accesstransformer.TransformerProcessor')
        attributes('Multi-Release': 'true')
    }
    dependencies {
        exclude(dependency {
            it.moduleName == 'antlr4'
        })
    }
}

artifacts {
    archives jar
    archives sourcesJar
    archives shadowJar
}

generateGrammarSource {
    arguments += ['-visitor', '-package', 'net.minecraftforge.accesstransformer.generated']
    outputDirectory = file("${project.buildDir}/generated-src/antlr/main/net/minecraftforge/accesstransformer/generated/")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
        }
    }
    // select the repositories you want to publish to
    repositories {
        maven {
            url cleanroom_maven
            credentials {
                username cleanroom_user
                password cleanroom_pass
            }
        }
    }
}
